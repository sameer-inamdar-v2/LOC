name: windowsCI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
    DOTNETVERSION: 6.0.x
    AZURE_WEBAPP_NAME: locmaui    # set this to your application's name
    AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
    AZUREAPPSERVICE_PUBLISHPROFILE: '<publishData><publishProfile profileName="loc1 - Web Deploy" publishMethod="MSDeploy" publishUrl="loc1.scm.azurewebsites.net:443" msdeploySite="loc1" userName="$loc1" userPWD="goyKENF71Xmrsm7gwu8xyKzcuRtgaQx19zpoAAPeXlwMtCxgkk8t10fhSBdd" destinationAppUrl="https://loc1.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="loc1 - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-blu-525.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="loc1\$loc1" userPWD="goyKENF71Xmrsm7gwu8xyKzcuRtgaQx19zpoAAPeXlwMtCxgkk8t10fhSBdd" destinationAppUrl="https://loc1.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="loc1 - Zip Deploy" publishMethod="ZipDeploy" publishUrl="loc1.scm.azurewebsites.net:443" userName="$loc1" userPWD="goyKENF71Xmrsm7gwu8xyKzcuRtgaQx19zpoAAPeXlwMtCxgkk8t10fhSBdd" destinationAppUrl="https://loc1.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
jobs:
  buildWindows:
   # if: "contains(github.event.commits[0].message, '[win]')"
    runs-on: windows-2022
    
    steps:
     - uses: actions/checkout@v2
      
     - name: Setup .NET SDK ${{env.DOTNETVERSION}}
       uses: actions/setup-dotnet@v1
       with:
              dotnet-version: '${{env.DOTNETVERSION}}'
       
     - name: Install .NET MAUI
       shell: pwsh
       run: |
          & dotnet nuget locals all --clear
          & dotnet workload install maui --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
          & dotnet workload install android ios maccatalyst tvos macos maui wasm-tools maui-maccatalyst --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json --source https://api.nuget.org/v3/index.json

     # https://docs.microsoft.com/en-us/dotnet/maui/windows/deployment/overview
     - name: Build Windows MSIX
       run: |
          cd .\LoanOffersCalculatorMAUI\LoanOffersCalculatorMAUI
            dotnet publish -f net6.0-windows10.0.19041.0 -c Release --property:PublishDir='./Windows'
          # dotnet publish -f net6.0-windows10.0.19041.0 -c Release -p:RuntimeIdentifierOverride=win10-x64 -p:GenerateAppxPackageOnBuild=true -p:AppxPackageSigningEnabled=true -p:PackageCertificateThumbprint="$thumbprint" -p:PackageCertificatePassword="786786"
          # msbuild /restore /t:Publish /p:TargetFramework=net6.0-windows10.0.19041 /p:TargetFrameworks="net6.0-windows10.0.19041;net6.0" /p:configuration=release /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="$thumbprint" /p:PackageCertificatePassword="786786"


 
      # https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil
      # commandline util to encode to base64 on windows
     - name: Create New-SelfSignedCertificate
       shell: pwsh
       id: secret-file
       run: |
            cd .\LoanOffersCalculatorMAUI\LoanOffersCalculatorMAUI
            $cert = New-SelfSignedCertificate -Type Custom -Subject "CN=User Name" -KeyUsage DigitalSignature -FriendlyName "V2-Cert-Loan" -CertStoreLocation "Cert:\CurrentUser\My" -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.3", "2.5.29.19={text}")
            # Get thumbprint
            $thumbprint = $Cert.Thumbprint
            $password = ConvertTo-SecureString -String 786786 -Force -AsPlainText
            Export-PfxCertificate -cert "Cert:\CurrentUser\My\$thumbprint" -FilePath loc.pfx -Password $password


    
  # https://docs.microsoft.com/en-us/windows/msix/desktop/azure-dev-ops
     - name: Sign Windows App
       shell: pwsh
       run: |
           cd .\LoanOffersCalculatorMAUI\LoanOffersCalculatorMAUI
           ls  
           $signtoolPath = "C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe"
           & $signtoolPath sign /a /fd SHA256 /f loc.pfx /p (786786) bin\Release\net6.0-windows10.0.19041.0\win10-x64\AppPackages\LoanOffersCalculatorMAUI_1.0.0.1_Test\LoanOffersCalculatorMAUI_1.0.0.1_x64.msix
                    
           # Set the full path to signtool.exe
           # $signtoolPath = "C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe"
           # Use signtool with the full path
           

     - uses: actions/upload-artifact@v2
       with:
          name: artifacts-windows
          path: |
            **\Windows\**\LoanOffersCalculatorMAUI_1.0.0.1_x64.msix
 
      
  deploy: 
    runs-on: windows-latest
    needs: buildWindows
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: artifacts-windows
          # path: ${{ github.workspace }}/artifacts-windows

      - name: Sleep for 30 seconds
        run: Start-Sleep -s 30
        shell: powershell

      - name: List Contents of Artifacts Directory
        run: |
          ls -R ${{ github.workspace }}/artifacts-windows

          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'loc1'
          slot-name: 'Production'
          publish-profile: ${{ env.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          # package: .

     #- uses: azure/webapps-deploy@v2
     #  with:
     #    publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  
     #    app-name: ${{ env.AZURE_WEBAPP_NAME }}
         # package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/Windows/'
         
 
